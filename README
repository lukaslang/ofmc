Joint Motion Estimation and Source Identification using Convective Regularisation
Version 1.0, 2019

Lukas F. Lang (ll542@cam.ac.uk)
Carola-Bibiane Schönlieb (cbs31@cam.ac.uk)
Department of Applied Mathematics and Theoretical Physics
University of Cambridge
Wilberforce Road, Cambridge CB3 0WA, United Kingdom

Nilankur Dutta (nilankur.dutta@univ-grenoble-alpes.fr)
Jocelyn Étienne (jocelyn.etienne@univ-grenoble-alpes.fr)
Laboratoire Interdisciplinaire de Physique
Université Grenoble Alpes
F-38000 Grenoble, France

Bénédicte Sanson (bs251@cam.ac.uk)
Elena Scarpa (es697@cam.ac.uk)
Department of Physiology, Development and Neuroscience
University of Cambridge
Downing Site, Cambridge CB2 3DY, United Kingdom

1. Introduction

This is a Python implementation of the methods described in:

L. F. Lang, N. Dutta, E. Scarpa, B. Sanson, C.-B. Schönlieb, and J. Étienne. Joint Motion 
Estimation and Source Identification using Convective Regularisation with an Application 
to the Analysis of Laser Nanoablations. Preprint, 2019.

If you use this software in your work please cite the abovementioned paper in
resulting publications.

BibTeX:

@techreport{LanDutScaSanSchoEti19,
  author     = {Lang, L.~F. and Dutta, N. and Scarpa, E. and Sanson, B. and Sch\"{o}nlieb, C.~B. and \'{E}tienne, J.},
  title      = {Joint Motion Estimation and Source Identification using Convective Regularisation with an Application to the Analysis of Laser Nanoablations},
  institution= {DAMTP, University of Cambridge, United Kingdom},
  type       = {Preprint},
  year       = {2019}
}

2. License & Disclaimer

Copyright 2017 Lukas Lang.

This file is part of OFMC. OFMC is free software: you can redistribute it
and/or modify it under the terms of the GNU General Public License as published
by the Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

OFMC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
OFMC. If not, see <http://www.gnu.org/licenses/>.

For the full license statement see the file LICENSE.

Moreover, the package includes third-party libraries:

Name: tifffile.py
Author: Christoph Gohlke
URL: http://www.lfd.uci.edu/~gohlke/

See ofmc/external/tifffile.py for its license.

3. Requirements

This software was written for and tested with Anaconda (conda version 4.6.4)
and Python 3.6.

The following libraries are required for parts of this sofware:

- FEniCS (2017.2.0-np113py36_3)
- scipy (1.0.1-py36_blas_openblashd3ea46f_201)
- matplotlib (2.2.2-py36_1)
- pillow (5.2.0-py36_0)
- read-roi (1.4.2-py36_0)
- imageio (2.3.0-py_1)

Installation instructions on MacOS using Anaconda  (conda version 4.6.4):

a. Download and install Anaconda from https://anaconda.org/
b. Create environment and install FEniCS:

>> conda create -n fenicsproject -c conda-forge fenics=2017.2.0

c. Activate the environment:

>> source activate fenicsproject

d. Install scipy, matplotlib, pillow, and read-roi:

>> conda install -c conda-forge scipy=1.1.0=py36_blas_openblashd3ea46f_201
>> conda install -c conda-forge matplotlib=2.2.2=py36_1
>> conda install -c conda-forge pillow=5.2.0=py36_0
>> conda install -c conda-forge read-roi=1.4.2=py36_0
>> conda install -c conda-forge imageio=2.3.0=py_1

e. As of 18 July 2018 there is an issue with sympy, see https://groups.google.com/forum/#!topic/fenics-support/wfGpk7T1aFc

In order to fix it downgrade using

>> conda install -c conda-forge sympy=1.1.1

f. In order to run/edit the scripts in an IDE install e.g. Spyder:

>> conda install -c conda-forge spyder

g. In order to run test cases in Spyder install spyder-unittest:

>> conda install -c conda-forge spyder-unittest

Alternatively, use PyCharm and create a run environment by selecting anaconda3/envs/fenicsproject environment.

We've added a file "environment.yaml" that allows to recreate the enviromnent 
easily via

>> conda env create -f environment.yaml

Caveat: There seems to be an issue with some packages that have become 
unavailable for some reason resulting in the error

ResolvePackageNotFound: 
  - nbconvert==5.3.1=py_1
  - matplotlib==2.2.2=py36_1
  - libssh2==1.8.0=h5b517e9_3
  - qt==5.6.2=h9e3eb04_4

Try using a different build for these versions. However, an upgrade to a
never version of fenics must be avoided!

4. Usage

To run the test cases execute

>> source activate fenicsproject
>> python -m unittest discover

We have added scripts that generate the figures in the paper. First, download 
the microscopy data (ZIP file) from:

https://doi.org/10.5281/zenodo.3257654

Uncompress the data, and place it some directory. Second, set the path to this 
directory in the script "datapath.py".

Run the scripts "paper_figures_X.py" to generate the figures in the paper.

Note that to reproduce the experimental evaluation, 

5. Acknowledgements

LFL and CBS acknowledge support from the Leverhulme Trust project "Breaking the non-convexity barrier", the EPSRC grant EP/M00483X/1, the EPSRC Centre Nr.\ EP/N014588/1, the RISE projects ChiPS and NoMADS, the Cantab Capital Institute for the Mathematics of Information, and the Alan Turing Institute.
ND and JE were supported by ANR-11-LABX-0030 "Tec21", by a CNRS Momentum grant, and by IRS "AnisoTiss" of Idex Univ. Grenoble Alpes. 
ND and JE are members of GDR 3570 MecaBio and GDR 3070 CellTiss of CNRS.
Some of the computations were performed using the Cactus cluster of the CIMENT infrastructure, supported by the Rhone-Alpes region (GRANT CPER07_13 CIRA) and the authors thank Philippe Beys, who manages the cluster.
Overall laboratory work was supported by Wellcome Trust Investigator Awards to BS (099234/Z/12/Z and 207553/Z/17/Z).
ES was also supported by a University of Cambridge Herchel Smith Fund Postdoctoral Fellowship.
The authors also wish to thank Pierre Recho for fruitful discussions and the re-use of his numerical simulation code.
