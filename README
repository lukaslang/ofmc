OFMC - A Variational Model for the Analysis of Membrane Cuts
Version 1.0, 2017

Lukas Lang (ll542@cam.ac.uk)
University of Cambridge
Department of Applied Mathematics and Theoretical Physics
Wilberforce Road, Cambridge CB3 0WA, United Kingdom
http://www.damtp.cam.ac.uk/

1. Introduction

This is a Python implementation of:

L.~F. Lang, Nilankur Dutta, Elena Scarpa, Bénédicte Sanson, C.~B. Schönlieb, and J. Étienne. Joint Motion Estimation and Source Identification with an Application to the Analysis of Biological Tissue Nanoablation Experiments.

If you use this software in your work please cite the abovementioned paper in a resulting publication.

BibTeX:

@techreport{LanDutScaSanSchoEti17,
  author     = {Lang, L.~F. and Dutta, N. and Scarpa, E. and Sanson, B. and Sch\"{o}nlieb, C.~B. and \'{E}tienne, J.},
  title      = {Joint Motion Estimation and Source Identification with an Application to the Analysis of Biological Tissue Nanoablation Experiments},
  institution= {DAMTP, University of Cambridge, United Kingdom},
  type       = {Preprint},
  year       = {2017}
}

2. License & Disclaimer

Copyright 2017 Lukas Lang.

This file is part of OFMC. OFMC is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

OFMC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with OFMC.  If not, see <http://www.gnu.org/licenses/>.

For the full license statement see the file LICENSE.

Moreover, the package includes third-party libraries:

Name: tifffile.py
Author: Christoph Gohlke
URL: http://www.lfd.uci.edu/~gohlke/
See ofmc/external/tifffile.py for the license.

3. Requirements

This software was written for and tested with Python 3.6.

The following libraries are required for parts of this sofware:

- FEniCS (2017.2.0-np113py36_3)
- scipy (1.0.1-py36_blas_openblas_200)
- matplotlib (2.1.0-py36_1)
- pillow (4.3.0-py36_1)
- read-roi (1.3.2-py36_0)
- imageio (2.3.0-py36_0)

Installation MacOS + Anaconda3.

a. Download and install Anaconda from https://anaconda.org/
b. Create environment and install FEniCS:

>> conda create -n fenicsproject -c conda-forge fenics

c. Activate the environment:

>> source activate fenicsproject

d. Install scipy, matplotlib, pillow, and read-roi:

>> conda install -c conda-forge scipy
>> conda install -c conda-forge matplotlib
>> conda install -c conda-forge pillow
>> conda install -c conda-forge read-roi
>> conda install -c conda-forge imageio

Not yet in use:

- dolfin-adjoint (2017.2.0-py36_0)

>> conda install -c conda-forge dolfin-adjoint

e. In order to run/edit the scripts in an IDE install e.g. Spyder:

>> conda install -c conda-forge spyder

f. In order to run test cases in Spyder install spyder-unittest:

>> conda install -c conda-forge spyder-unittest

Alternatively, use PyCharm and create a run environment by selecting anaconda3/envs/fenicsproject environment.

4. Usage

To run the test cases execute

>> source activate fenicsproject
>> python -m unittest discover

To run test cases in Spyder click Run -> Run unit tests.